// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MaksMalf/testGrpc/internal/app/storage (interfaces: NoteStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/MaksMalf/testGrpc/internal/app/api/model"
	gomock "github.com/golang/mock/gomock"
)

// MockNoteStorage is a mock of NoteStorage interface.
type MockNoteStorage struct {
	ctrl     *gomock.Controller
	recorder *MockNoteStorageMockRecorder
}

// MockNoteStorageMockRecorder is the mock recorder for MockNoteStorage.
type MockNoteStorageMockRecorder struct {
	mock *MockNoteStorage
}

// NewMockNoteStorage creates a new mock instance.
func NewMockNoteStorage(ctrl *gomock.Controller) *MockNoteStorage {
	mock := &MockNoteStorage{ctrl: ctrl}
	mock.recorder = &MockNoteStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoteStorage) EXPECT() *MockNoteStorageMockRecorder {
	return m.recorder
}

// CreateNote mocks base method.
func (m *MockNoteStorage) CreateNote(arg0 context.Context, arg1 *model.NoteInfo) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNote", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNote indicates an expected call of CreateNote.
func (mr *MockNoteStorageMockRecorder) CreateNote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNote", reflect.TypeOf((*MockNoteStorage)(nil).CreateNote), arg0, arg1)
}

// DeleteNote mocks base method.
func (m *MockNoteStorage) DeleteNote(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNote", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNote indicates an expected call of DeleteNote.
func (mr *MockNoteStorageMockRecorder) DeleteNote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNote", reflect.TypeOf((*MockNoteStorage)(nil).DeleteNote), arg0, arg1)
}

// GetListNote mocks base method.
func (m *MockNoteStorage) GetListNote(arg0 context.Context) ([]*model.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListNote", arg0)
	ret0, _ := ret[0].([]*model.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListNote indicates an expected call of GetListNote.
func (mr *MockNoteStorageMockRecorder) GetListNote(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListNote", reflect.TypeOf((*MockNoteStorage)(nil).GetListNote), arg0)
}

// GetNote mocks base method.
func (m *MockNoteStorage) GetNote(arg0 context.Context, arg1 int64) (*model.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNote", arg0, arg1)
	ret0, _ := ret[0].(*model.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNote indicates an expected call of GetNote.
func (mr *MockNoteStorageMockRecorder) GetNote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNote", reflect.TypeOf((*MockNoteStorage)(nil).GetNote), arg0, arg1)
}

// UpdateNote mocks base method.
func (m *MockNoteStorage) UpdateNote(arg0 context.Context, arg1 int64, arg2 *model.UpdateNoteInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNote", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateNote indicates an expected call of UpdateNote.
func (mr *MockNoteStorageMockRecorder) UpdateNote(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNote", reflect.TypeOf((*MockNoteStorage)(nil).UpdateNote), arg0, arg1, arg2)
}
