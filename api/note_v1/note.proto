syntax = "proto3";

package api.note_v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "github.com/MaksMalf/testGrpc/pkg/note_v1";

service NoteV1 {
  rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponce) {
    option (google.api.http) = {
      post: "/note/v1/create"
      body: "*"
    };
  }
  rpc GetNote (GetNoteRequest) returns (GetNoteResponce) {
    option (google.api.http) = {
      get: "/note/v1/get/{id}"
    };
  }
  rpc GetListNote (google.protobuf.Empty) returns (GetListNoteResponce) {
    option (google.api.http) = {
      get: "/note/v1/list"
    };
  }
  rpc UpdateNote (UpdateNoteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/note/v1/update"
      body: "*"
    };
  }
  rpc DeleteNote (DeleteNoteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/note/v1/delete/{id}"
    };
  }
}

message CreateNoteRequest {
  string title = 1 [json_name = "title", (validate.rules).string = {min_len: 1, max_len: 30}];
  string text = 2;
  string author = 3 [json_name = "author", (validate.rules).string = {min_len: 1, max_len: 20}];
}

message CreateNoteResponce {
  message Result {
    int64 id = 1;
  }

  Result result = 1;
}

message GetNoteRequest {
  int64 id = 1 [json_name = "id", (validate.rules).int64.gt = 0];
}

message GetNoteResponce {
  message Note {
    int64 id = 1;
    string title = 2;
    string text = 3;
    string author = 4;
  }

  Note result = 1;
}

message GetListNoteResponce {
  message Result {
    message Note {
      int64 id = 1;
      string title = 2;
      string text = 3;
      string author = 4;
    }

    repeated Note notes = 1;
  }

  Result result = 1;
}

message UpdateNoteRequest {
  int64 id = 1 [json_name = "id", (validate.rules).int64.gt = 0];
  string title = 2 [json_name = "title", (validate.rules).string = {min_len: 1, max_len: 30}];
  string text = 3;
  string author = 4 [json_name = "author", (validate.rules).string = {min_len: 1, max_len: 20}];
}

message DeleteNoteRequest {
  int64 id = 1 [json_name = "id", (validate.rules).int64.gt = 0];
}